// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API Gateway returns Lambda functions 1`] = `
Object {
  "Parameters": Any<Object>,
  "Resources": Object {
    "setupconnectionauthorizerFunctionE2E31CC5": Object {
      "DependsOn": Array [
        "setupconnectionauthorizerFunctionServiceRoleCD1EC894",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "secretsId": "devF7B884FF-75G7hosnKYhv",
            "stage": "dev",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "setupconnectionauthorizerFunctionServiceRoleCD1EC894",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "setupconnectionauthorizerFunctionServiceRoleCD1EC894": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "setupconnectiongetStateFunction1D3A554F": Object {
      "DependsOn": Array [
        "setupconnectiongetStateFunctionServiceRole7399EE77",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "secretsId": "devF7B884FF-75G7hosnKYhv",
            "stage": "dev",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "setupconnectiongetStateFunctionServiceRole7399EE77",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "setupconnectiongetStateFunctionServiceRole7399EE77": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "setupconnectiononConnectFunction1026145B": Object {
      "DependsOn": Array [
        "setupconnectiononConnectFunctionServiceRole5F640ED8",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "secretsId": "devF7B884FF-75G7hosnKYhv",
            "stage": "dev",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "setupconnectiononConnectFunctionServiceRole5F640ED8",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "setupconnectiononConnectFunctionServiceRole5F640ED8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "setupconnectiononDisconnectFunction6260FCA7": Object {
      "DependsOn": Array [
        "setupconnectiononDisconnectFunctionServiceRoleA17A7E4A",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "secretsId": "devF7B884FF-75G7hosnKYhv",
            "stage": "dev",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "setupconnectiononDisconnectFunctionServiceRoleA17A7E4A",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "setupconnectiononDisconnectFunctionServiceRoleA17A7E4A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
